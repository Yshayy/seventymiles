{"ts":1369417407307,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1369417463637,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Pivotal Search</title>\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"\">\r\n\r\n    <!-- HTML5 shim, for IE6-8 support of HTML elements -->\r\n    <!--[if lt IE 9]>\r\n      <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n\r\n    <!-- styles -->\r\n    <link href=\"stylesheets/style.css\" rel=\"stylesheet\">\r\n\r\n  </head>\r\n  <body>\r\n    <%- body %>\r\n  </body>\r\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":512}]],"length":512,"saved":false}
{"ts":1369417479315,"patch":[[{"diffs":[[-1,"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Pivotal Search</title>\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"\">\r\n\r\n    <!-- HTML5 shim, for IE6-8 support of HTML elements -->\r\n    <!--[if lt IE 9]>\r\n      <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n\r\n    <!-- styles -->\r\n    <link href=\"stylesheets/style.css\" rel=\"stylesheet\">\r\n\r\n  </head>\r\n  <body>\r\n    <%- body %>\r\n  </body>\r\n</html>"]],"start1":0,"start2":0,"length1":512,"length2":0}]],"length":0,"saved":false}
{"ts":1369417490867,"patch":[[{"diffs":[[1,"<div>\nindex\n</div>"]],"start1":0,"start2":0,"length1":0,"length2":18}]],"length":18,"saved":false}
{"ts":1369417522863,"patch":[[{"diffs":[[0,"<"],[-1,"div>\nindex\n</div"],[1,"script type=\"text/javascript\">\n\n</script"],[0,">"]],"start1":0,"start2":0,"length1":18,"length2":42}]],"length":42,"saved":false}
{"ts":1369417545707,"patch":[[{"diffs":[[0,"script\">"],[-1,"\n"],[1,"\r\n<script type=\"text/javascript\">\r\nfunction()\r\n{\r\n  var localVideo;\r\n  var miniVideo;\r\n  var remoteVideo;\r\n  var localStream;\r\n  var remoteStream;\r\n  var channel;\r\n  var channelReady = false;\r\n  var turnReady = false;\r\n  var pc;\r\n  var socket;\r\n  var initiator = 1;\r\n  var started = false;\r\n  var pc_config = {\"iceServers\": [{\"url\": \"stun:stun.l.google.com:19302\"}]};\r\n  var pc_constraints = {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]};\r\n  // Set up audio and video regardless of what devices are present.\r\n  var sdpConstraints = {'mandatory': {\r\n                          'OfferToReceiveAudio':true, \r\n                          'OfferToReceiveVideo':true }};\r\n  var isVideoMuted = false;\r\n  var isAudioMuted = false;\r\n  var stereo = false;\r\n\r\n  function initialize() {\r\n    card = document.getElementById(\"card\");\r\n    localVideo = document.getElementById(\"localVideo\");\r\n    miniVideo = document.getElementById(\"miniVideo\");\r\n    remoteVideo = document.getElementById(\"remoteVideo\");\r\n    resetStatus();\r\n    // NOTE: AppRTCClient.java searches & parses this line; update there when\r\n    // changing here.\r\n    openChannel('AHRlWroRsvA9sYt1nsytroWe-cDJTYzChZlJjS6D6ho8rOWukdFu6jSQAI0lXJ8nX0ZLe-6VdcdFy8-Abhab5h8HhuCCaou99Z_WcGp4SP6xuegS5HHSGGs');\r\n    requestTurn('https://computeengineondemand.appspot.com/turn?username=10815863&key=4080218913');\r\n    stereo = false;\r\n    doGetUserMedia();\r\n  }\r\n\r\n  function openChannel(channelToken) {\r\n    console.log(\"Opening channel.\");\r\n    var channel = new goog.appengine.Channel(channelToken);\r\n    var handler = {\r\n      'onopen': onChannelOpened,\r\n      'onmessage': onChannelMessage,\r\n      'onerror': onChannelError,\r\n      'onclose': onChannelClosed\r\n    };\r\n    socket = channel.open(handler);\r\n  }\r\n\r\n  function requestTurn(turn_url) {\r\n    var turnExists = false;\r\n    for (var i in pc_config.iceServers) {\r\n      if (pc_config.iceServers[i].url.substr(0, 5) == 'turn:') {\r\n        turnExists = true;\r\n        turnReady = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!turnExists) {\r\n      // No turn server. Get one from computeengineondemand.appspot.com:\r\n      xmlhttp = new XMLHttpRequest();\r\n      xmlhttp.onreadystatechange = onTurnResult;\r\n      xmlhttp.open(\"GET\", turn_url, true);\r\n      xmlhttp.send();\r\n    }\r\n  }\r\n\r\n  function onTurnResult() {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      var turnServer = JSON.parse(xmlhttp.responseText);\r\n      pc_config.iceServers.push({\r\n        \"url\": \"turn:\" + turnServer.username + \"@\" + turnServer.turn,\r\n        \"credential\": turnServer.password\r\n      });\r\n      turnReady = true;\r\n    }\r\n  }\r\n\r\n  function resetStatus() {\r\n    if (!initiator) {\r\n      setStatus(\"Waiting for someone to join: <a href=\\\"https://apprtc.appspot.com/?r=91533542\\\">https://apprtc.appspot.com/?r=91533542</a>\");\r\n    } else {\r\n      setStatus(\"Initializing...\");\r\n    }\r\n  }\r\n\r\n  function doGetUserMedia() {\r\n    // Call into getUserMedia via the polyfill (adapter.js).\r\n    var constraints = {\"audio\": true, \"video\": {\"mandatory\": {}, \"optional\": []}}; \r\n    try {\r\n      getUserMedia(constraints, onUserMediaSuccess,\r\n                   onUserMediaError);\r\n      console.log(\"Requested access to local media with mediaConstraints:\\n\" +\r\n                  \"  \\\"\" + JSON.stringify(constraints) + \"\\\"\");\r\n    } catch (e) {\r\n      alert(\"getUserMedia() failed. Is this a WebRTC capable browser?\");\r\n      console.log(\"getUserMedia failed with exception: \" + e.message);\r\n    }\r\n  }\r\n\r\n  function createPeerConnection() {    \r\n    // Force the use of a number IP STUN server for Firefox.\r\n    if (webrtcDetectedBrowser == \"firefox\") {\r\n      pc_config = {\"iceServers\":[{\"url\":\"stun:23.21.150.121\"}]};\r\n    }\r\n    try {\r\n      // Create an RTCPeerConnection via the polyfill (adapter.js).\r\n      pc = new RTCPeerConnection(pc_config, pc_constraints);\r\n      pc.onicecandidate = onIceCandidate;\r\n      console.log(\"Created RTCPeerConnnection with:\\n\" + \r\n                  \"  config: \\\"\" + JSON.stringify(pc_config) + \"\\\";\\n\" + \r\n                  \"  constraints: \\\"\" + JSON.stringify(pc_constraints) + \"\\\".\");\r\n    } catch (e) {\r\n      console.log(\"Failed to create PeerConnection, exception: \" + e.message);\r\n      alert(\"Cannot create RTCPeerConnection object; WebRTC is not supported by this browser.\");\r\n        return;\r\n    }\r\n    pc.onaddstream = onRemoteStreamAdded;\r\n    pc.onremovestream = onRemoteStreamRemoved;\r\n  }\r\n\r\n  function maybeStart() {\r\n    if (!started && localStream && channelReady && turnReady) {\r\n      setStatus(\"Connecting...\");\r\n      console.log(\"Creating PeerConnection.\");\r\n      createPeerConnection();\r\n      console.log(\"Adding local stream.\");\r\n      pc.addStream(localStream);\r\n      started = true;\r\n      // Caller initiates offer to peer.\r\n      if (initiator)\r\n        doCall();\r\n    }\r\n  }\r\n\r\n  function setStatus(state) {\r\n    footer.innerHTML = state;\r\n  }\r\n\r\n  function doCall() {\r\n    var constraints = {\"optional\": [], \"mandatory\": {\"MozDontOfferDataChannel\": true}};\r\n    // temporary measure to remove Moz* constraints in Chrome\r\n    if (webrtcDetectedBrowser === \"chrome\") {\r\n      for (prop in constraints.mandatory) {\r\n        if (prop.indexOf(\"Moz\") != -1) {\r\n          delete constraints.mandatory[prop];\r\n        }\r\n       }\r\n     }   \r\n    constraints = mergeConstraints(constraints, sdpConstraints);\r\n    console.log(\"Sending offer to peer, with constraints: \\n\" +\r\n                \"  \\\"\" + JSON.stringify(constraints) + \"\\\".\")\r\n    pc.createOffer(setLocalAndSendMessage, null, constraints);\r\n  }\r\n\r\n  function doAnswer() {\r\n    console.log(\"Sending answer to peer.\");\r\n    pc.createAnswer(setLocalAndSendMessage, null, sdpConstraints);\r\n  }\r\n\r\n  function mergeConstraints(cons1, cons2) {\r\n    var merged = cons1;\r\n    for (var name in cons2.mandatory) {\r\n      merged.mandatory[name] = cons2.mandatory[name];\r\n    }\r\n    merged.optional.concat(cons2.optional);\r\n    return merged;\r\n  }\r\n\r\n  function setLocalAndSendMessage(sessionDescription) {\r\n    // Set Opus as the preferred codec in SDP if Opus is present.\r\n    sessionDescription.sdp = preferOpus(sessionDescription.sdp);\r\n    pc.setLocalDescription(sessionDescription);\r\n    sendMessage(sessionDescription);\r\n  }\r\n\r\n  function sendMessage(message) {\r\n    var msgString = JSON.stringify(message);\r\n    console.log('C->S: ' + msgString);\r\n    // NOTE: AppRTCClient.java searches & parses this line; update there when\r\n    // changing here.\r\n    path = '/message?r=91533542' + '&u=10815863';\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('POST', path, true);\r\n    xhr.send(msgString);\r\n  }\r\n\r\n  function processSignalingMessage(message) {\r\n    var msg = JSON.parse(message);\r\n    if (msg.type === 'offer') {\r\n      // Callee creates PeerConnection\r\n      if (!initiator && !started)\r\n        maybeStart();\r\n      // Set Opus in Stereo, if stereo enabled.\r\n      if (stereo)\r\n        msg.sdp = addStereo(msg.sdp);\r\n      pc.setRemoteDescription(new RTCSessionDescription(msg));\r\n      doAnswer();\r\n    } else if (msg.type === 'answer' && started) {\r\n      // Set Opus in Stereo, if stereo enabled.\r\n      if (stereo)\r\n        msg.sdp = addStereo(msg.sdp);\r\n      pc.setRemoteDescription(new RTCSessionDescription(msg));\r\n    } else if (msg.type === 'candidate' && started) {\r\n      var candidate = new RTCIceCandidate({sdpMLineIndex:msg.label,\r\n                                           candidate:msg.candidate});\r\n      pc.addIceCandidate(candidate);\r\n    } else if (msg.type === 'bye' && started) {\r\n      onRemoteHangup();\r\n    }\r\n  }\r\n\r\n  function onChannelOpened() {\r\n    console.log('Channel opened.');\r\n    channelReady = true;\r\n    if (initiator) maybeStart();\r\n  }\r\n  function onChannelMessage(message) {\r\n    console.log('S->C: ' + message.data);\r\n    processSignalingMessage(message.data);\r\n  }\r\n  function onChannelError() {\r\n    console.log('Channel error.');\r\n  }\r\n  function onChannelClosed() {\r\n    console.log('Channel closed.');\r\n  }\r\n\r\n  function onUserMediaSuccess(stream) {\r\n    console.log(\"User has granted access to local media.\");\r\n    // Call the polyfill wrapper to attach the media stream to this element.\r\n    attachMediaStream(localVideo, stream);\r\n    localVideo.style.opacity = 1;\r\n    localStream = stream;\r\n    // Caller creates PeerConnection.\r\n    if (initiator) maybeStart();\r\n  }\r\n\r\n  function onUserMediaError(error) {\r\n    console.log(\"Failed to get access to local media. Error code was \" + error.code);\r\n    alert(\"Failed to get access to local media. Error code was \" + error.code + \".\");\r\n  }\r\n\r\n  function onIceCandidate(event) {\r\n    if (event.candidate) {\r\n      sendMessage({type: 'candidate',\r\n                   label: event.candidate.sdpMLineIndex,\r\n                   id: event.candidate.sdpMid,\r\n                   candidate: event.candidate.candidate});\r\n    } else {\r\n      console.log(\"End of candidates.\");\r\n    }\r\n  }\r\n\r\n  function onRemoteStreamAdded(event) {\r\n    console.log(\"Remote stream added.\"); \r\n    reattachMediaStream(miniVideo, localVideo);\r\n    attachMediaStream(remoteVideo, event.stream);\r\n    remoteStream = event.stream;\r\n    waitForRemoteVideo();  \r\n  }\r\n  function onRemoteStreamRemoved(event) {\r\n    console.log(\"Remote stream removed.\");\r\n  }\r\n\r\n  function onHangup() {\r\n    console.log(\"Hanging up.\");\r\n    transitionToDone();\r\n    stop();\r\n    // will trigger BYE from server\r\n    socket.close();\r\n  }\r\n   \r\n  function onRemoteHangup() {\r\n    console.log('Session terminated.');\r\n    transitionToWaiting();\r\n    stop();\r\n    initiator = 0;\r\n  }\r\n\r\n  function stop() {\r\n    started = false;\r\n    isAudioMuted = false;\r\n    isVideoMuted = false;\r\n    pc.close();\r\n    pc = null;\r\n  }\r\n\r\n  function waitForRemoteVideo() {\r\n    // Call the getVideoTracks method via adapter.js.\r\n    videoTracks = remoteStream.getVideoTracks();\r\n    if (videoTracks.length === 0 || remoteVideo.currentTime > 0) {\r\n      transitionToActive();\r\n    } else {\r\n      setTimeout(waitForRemoteVideo, 100);\r\n    }\r\n  }\r\n  function transitionToActive() {\r\n    remoteVideo.style.opacity = 1;\r\n    card.style.webkitTransform = \"rotateY(180deg)\";\r\n    setTimeout(function() { localVideo.src = \"\"; }, 500);\r\n    setTimeout(function() { miniVideo.style.opacity = 1; }, 1000);\r\n    setStatus(\"<input type=\\\"button\\\" id=\\\"hangup\\\" value=\\\"Hang up\\\" onclick=\\\"onHangup()\\\" />\");\r\n  }\r\n  function transitionToWaiting() {\r\n    card.style.webkitTransform = \"rotateY(0deg)\";\r\n    setTimeout(function() {\r\n                 localVideo.src = miniVideo.src;\r\n                 miniVideo.src = \"\";\r\n                 remoteVideo.src = \"\" }, 500);\r\n    miniVideo.style.opacity = 0;\r\n    remoteVideo.style.opacity = 0;\r\n    resetStatus();\r\n  }\r\n  function transitionToDone() {\r\n    localVideo.style.opacity = 0;\r\n    remoteVideo.style.opacity = 0;\r\n    miniVideo.style.opacity = 0;\r\n    setStatus(\"You have left the call. <a href=\\\"https://apprtc.appspot.com/?r=91533542\\\">Click here</a> to rejoin.\");\r\n  }\r\n  function enterFullScreen() {\r\n    container.webkitRequestFullScreen();\r\n  }\r\n\r\n  function toggleVideoMute() {\r\n    // Call the getVideoTracks method via adapter.js.\r\n    videoTracks = localStream.getVideoTracks();\r\n\r\n    if (videoTracks.length === 0) {\r\n      console.log(\"No local video available.\");\r\n      return;\r\n    }\r\n\r\n    if (isVideoMuted) {\r\n      for (i = 0; i < videoTracks.length; i++) {\r\n        videoTracks[i].enabled = true;\r\n      }\r\n      console.log(\"Video unmuted.\");\r\n    } else {\r\n      for (i = 0; i < videoTracks.length; i++) {\r\n        videoTracks[i].enabled = false;\r\n      }\r\n      console.log(\"Video muted.\");\r\n    }\r\n\r\n    isVideoMuted = !isVideoMuted;    \r\n  }\r\n\r\n  function toggleAudioMute() {\r\n    // Call the getAudioTracks method via adapter.js.\r\n    audioTracks = localStream.getAudioTracks();\r\n\r\n    if (audioTracks.length === 0) {\r\n      console.log(\"No local audio available.\");\r\n      return;\r\n    }\r\n\r\n    if (isAudioMuted) {\r\n      for (i = 0; i < audioTracks.length; i++) {\r\n        audioTracks[i].enabled = true;\r\n      }\r\n      console.log(\"Audio unmuted.\");\r\n    } else {\r\n      for (i = 0; i < audioTracks.length; i++){\r\n        audioTracks[i].enabled = false;\r\n      }\r\n      console.log(\"Audio muted.\");\r\n    }\r\n\r\n    isAudioMuted = !isAudioMuted;  \r\n  }\r\n\r\n  setTimeout(initialize, 1);\r\n\r\n  // Send BYE on refreshing(or leaving) a demo page\r\n  // to ensure the room is cleaned for next session.\r\n  window.onbeforeunload = function() {\r\n    sendMessage({type: 'bye'});\r\n  }\r\n\r\n  // Ctrl-D: toggle audio mute; Ctrl-E: toggle video mute.\r\n  // On Mac, Command key is instead of Ctrl.\r\n  // Return false to screen out original Chrome shortcuts.\r\n  document.onkeydown = function() {\r\n    if (navigator.appVersion.indexOf(\"Mac\") != -1) {\r\n      if (event.metaKey && event.keyCode === 68) {\r\n        toggleAudioMute();\r\n        return false;\r\n      }\r\n      if (event.metaKey && event.keyCode === 69) {\r\n        toggleVideoMute();\r\n        return false;\r\n      }\r\n    } else {\r\n      if (event.ctrlKey && event.keyCode === 68) {\r\n        toggleAudioMute();\r\n        return false;\r\n      }\r\n      if (event.ctrlKey && event.keyCode === 69) {\r\n        toggleVideoMute();\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Set Opus as the default audio codec if it's present.\r\n  function preferOpus(sdp) {\r\n    var sdpLines = sdp.split('\\r\\n');\r\n\r\n    // Search for m line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n        if (sdpLines[i].search('m=audio') !== -1) {\r\n          var mLineIndex = i;\r\n          break;\r\n        } \r\n    }\r\n    if (mLineIndex === null)\r\n      return sdp;\r\n\r\n    // If Opus is available, set it as the default in m line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('opus/48000') !== -1) {        \r\n        var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n        if (opusPayload)\r\n          sdpLines[mLineIndex] = setDefaultCodec(sdpLines[mLineIndex], opusPayload);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Remove CN in m line and sdp.\r\n    sdpLines = removeCN(sdpLines, mLineIndex);\r\n\r\n    sdp = sdpLines.join('\\r\\n');\r\n    return sdp;\r\n  }\r\n\r\n  // Set Opus in stereo if stereo is enabled.\r\n  function addStereo(sdp) {\r\n    var sdpLines = sdp.split('\\r\\n');\r\n\r\n    // Find opus payload.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('opus/48000') !== -1) {\r\n        var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Find the payload in fmtp line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('a=fmtp') !== -1) {\r\n        var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/ );\r\n        if (payload === opusPayload) {\r\n          var fmtpLineIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // No fmtp line found.\r\n    if (fmtpLineIndex === null)\r\n      return sdp;\r\n\r\n    // append stereo=1 to fmtp line.\r\n    sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat(' stereo=1');\r\n\r\n    sdp = sdpLines.join('\\r\\n');\r\n    return sdp;\r\n  }\r\n\r\n  function extractSdp(sdpLine, pattern) {\r\n    var result = sdpLine.match(pattern);\r\n    return (result && result.length == 2)? result[1]: null;\r\n  }\r\n\r\n  // Set the selected codec to the first in m line.\r\n  function setDefaultCodec(mLine, payload) {\r\n    var elements = mLine.split(' ');\r\n    var newLine = new Array();\r\n    var index = 0;\r\n    for (var i = 0; i < elements.length; i++) {\r\n      if (index === 3) // Format of media starts from the fourth.\r\n        newLine[index++] = payload; // Put target payload to the first.\r\n      if (elements[i] !== payload)\r\n        newLine[index++] = elements[i];\r\n    }\r\n    return newLine.join(' ');\r\n  }\r\n\r\n  // Strip CN from sdp before CN constraints is ready.\r\n  function removeCN(sdpLines, mLineIndex) {\r\n    var mLineElements = sdpLines[mLineIndex].split(' ');\r\n    // Scan from end for the convenience of removing an item.\r\n    for (var i = sdpLines.length-1; i >= 0; i--) {\r\n      var payload = extractSdp(sdpLines[i], /a=rtpmap:(\\d+) CN\\/\\d+/i);\r\n      if (payload) {\r\n        var cnPos = mLineElements.indexOf(payload);\r\n        if (cnPos !== -1) {\r\n          // Remove CN payload from m line.\r\n          mLineElements.splice(cnPos, 1);\r\n        }\r\n        // Remove CN line in sdp\r\n        sdpLines.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    sdpLines[mLineIndex] = mLineElements.join(' ');\r\n    return sdpLines;\r\n  }\r\n})();\r"],[0,"\n</scrip"]],"start1":23,"start2":23,"length1":17,"length2":16467}]],"length":16492,"saved":false}
{"ts":1369417637579,"patch":[[{"diffs":[[0,"<script "],[-1,"type=\"text/java"],[1,"src=\"/socket.io/socket.io.js\"></"],[0,"script"],[-1,"\""],[0,">\r\n<scri"]],"start1":0,"start2":0,"length1":38,"length2":54},{"diffs":[[0,"ript\">\r\n"],[1,"var socket = io.connect('http://localhost');\r\n  socket.on('news', function (data) {\r\n    console.log(data);\r\n    socket.emit('my other event', { my: 'data' });\r\n  });\r\n  \r\n"],[0,"function"]],"start1":74,"start2":74,"length1":16,"length2":188}]],"length":16680,"saved":false}
{"ts":1369417706962,"patch":[[{"diffs":[[0,"ct('"],[-1,"http://localhost"],[1,"/"],[0,"');\r"]],"start1":103,"start2":103,"length1":24,"length2":9}]],"length":16665,"saved":false}
{"ts":1369417992480,"patch":[[{"diffs":[[0,"('/');\r\n"],[1,"socket.join('SessionId');\r\n\r\n"],[0,"  socket"]],"start1":105,"start2":105,"length1":16,"length2":45}]],"length":16694,"saved":false}
{"ts":1369418030901,"patch":[[{"diffs":[[0,"in('"],[-1,"S"],[1,"s"],[0,"ession"],[-1,"I"],[1,"i"],[0,"d');"]],"start1":122,"start2":122,"length1":16,"length2":16}]],"length":16694,"saved":false}
{"ts":1369418062452,"patch":[[{"diffs":[[0,"on('"],[-1,"news"],[1,"parseIceOffer"],[0,"', f"]],"start1":151,"start2":151,"length1":12,"length2":21},{"diffs":[[0,"    "],[-1,"console.log(data);\r\n    socket.emit('my other event', { my: 'data' });"],[0,"\r\n  "]],"start1":190,"start2":190,"length1":78,"length2":8}]],"length":16633,"saved":false}
{"ts":1369418117169,"patch":[[{"diffs":[[0,"d');\r\n\r\n"],[-1,"  "],[1,"socket.on('parseIceOffer', function (data) {\r\n    \r\n});\r\n\r\n"],[0,"socket.o"]],"start1":134,"start2":134,"length1":18,"length2":75},{"diffs":[[0,"\r\n    \r\n"],[-1,"  "],[0,"});\r\n  \r"]],"start1":245,"start2":245,"length1":18,"length2":16},{"diffs":[[0,");\r\n  \r\n"],[1,"  \r\n  \r\n"],[0,"function"]],"start1":254,"start2":254,"length1":16,"length2":24}]],"length":16696,"saved":false}
{"ts":1369418125751,"patch":[[{"diffs":[[0,"ket.on('parseIce"],[-1,"Offer"],[1,"Candidate"],[0,"', function (dat"]],"start1":204,"start2":204,"length1":37,"length2":41}]],"length":16700,"saved":false}
{"ts":1369418129328,"patch":[[{"diffs":[[0,"  \r\n});\r"],[1,"\n\r\nsocket.on('parseIceCandidate', function (data) {\r\n    \r\n});\r\n  \r"],[0,"\n  \r\n  \r"]],"start1":253,"start2":253,"length1":16,"length2":83}]],"length":16767,"saved":false}
{"ts":1369419087078,"patch":[[{"diffs":[[0,");\r\n"],[-1,"socket.join('sessionid');\r\n\r\nsocket.on('parseIceOffer', function (data) {"],[1,"\r\n  "],[0,"\r\n  "],[-1," "],[-1," "],[0,"\r\n"],[-1,"});\r\n\r\nsocket.on('parseIceCandidate', function (data) {\r\n    \r\n});\r\n\r\nsocket.on('parseIceCandidate', function (data) {\r\n    \r\n});\r\n  \r\n  \r\n"],[0,"  \r\n  \r\n"],[1,"("],[0,"func"]],"start1":109,"start2":109,"length1":236,"length2":27},{"diffs":[[0,"hannel.\");\r\n"],[1,"    socket.join('sessionid' + '_webrtc');\r\n    socket.on('passWebRtcMessage', function (data) {\r\n         onChannelMessage(data);\r\n    });\r\n    /*\r\n\r\nsocket.on('passIceCandidate', function (data) {\r\n    \r\n});\r\n\r\nsocket.on('passIceCandidate', function (data) {\r\n    \r\n});\r\n"],[0,"    var chan"]],"start1":1568,"start2":1568,"length1":24,"length2":296},{"diffs":[[0,"(handler);\r\n"],[1,"    */\r\n"],[0,"  }\r\n\r\n  fun"]],"start1":2107,"start2":2107,"length1":24,"length2":32}]],"length":16838,"saved":false}
{"ts":1369419409949,"patch":[[{"diffs":[[0,"unction("],[1,"sessionId"],[0,")\r\n{\r\n  "]],"start1":133,"start2":133,"length1":16,"length2":25}]],"length":16847,"saved":false}
{"ts":1369419461183,"patch":[[{"diffs":[[0,"oin("],[-1,"'"],[0,"session"],[-1,"id' + '_webrtc'"],[1,"Id);"],[0,");\r\n"]],"start1":1601,"start2":1601,"length1":31,"length2":19},{"diffs":[[0,");\r\n"],[1,""],[0,"    /*\r"],[-1,"\n\r\nsocket.on('passIceCandidate', function (data) {\r\n    \r\n});\r\n\r\nsocket.on('passIceCandidate', function (data) {\r\n    \r\n});\r"],[0,"\n   "]],"start1":1713,"start2":1713,"length1":139,"length2":15}]],"length":16711,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369423641446,"patch":[[{"diffs":[[1,"<div>\r\nHello world\r\n</div>\r\n"],[0,"<script src=\"/so"]],"start1":0,"start2":0,"length1":16,"length2":44},{"diffs":[[0,"\r\n\r\n"],[-1,"  \r\n  \r\n  \r\n  \r\n"],[0,"(fun"]],"start1":139,"start2":139,"length1":24,"length2":8},{"diffs":[[0,"nel("],[-1,"'AHRlWroRsvA9sYt1nsytroWe-cDJTYzChZlJjS6D6ho8rOWukdFu6jSQAI0lXJ8nX0ZLe-6VdcdFy8-Abhab5h8HhuCCaou99Z_WcGp4SP6xuegS5HHSGGs'"],[1,"sessionId"],[0,");\r\n"]],"start1":1242,"start2":1242,"length1":129,"length2":17},{"diffs":[[0,"ket."],[-1,"join(sessionId"],[1,"send(\"\", channelToken"],[0,"););"]],"start1":1496,"start2":1496,"length1":22,"length2":29},{"diffs":[[0,"age(data);\r\n"],[1,""],[0,"    });\r\n   "]],"start1":1603,"start2":1603,"length1":24,"length2":24},{"diffs":[[0,");\r\n"],[-1,"    /*\r\n    var channel = new goog.appengine.Channel(channelToken);\r\n    var handler = {\r\n      'onopen': onChannelOpened,\r\n      'onmessage': onChannelMessage,\r\n      'onerror': onChannelError,\r\n      'onclose': onChannelClosed\r\n    };\r\n    socket = channel.open(handler);\r\n    */\r\n"],[0,"  }\r"]],"start1":1620,"start2":1620,"length1":291,"length2":8}]],"length":16335,"saved":false}
{"ts":1369424360696,"patch":[[{"diffs":[[0,"lToken);"],[-1,");"],[0,"\r\n    so"]],"start1":1515,"start2":1515,"length1":18,"length2":16}]],"length":16333,"saved":false}
{"ts":1369424433412,"patch":[[{"diffs":[[0,"</div>\r\n"],[1,"<script src=\"/js/adapter.js\"></script>\r\n\r\n<style type=\"text/css\">\r\n  a:link { color: #ffffff; }\r\n  a:visited {color: #ffffff; }\r\n  html, body {\r\n    background-color: #000000;\r\n    height: 100%;\r\n    font-family:Verdana, Arial, Helvetica, sans-serif;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  #container {\r\n    background-color: #000000;\r\n    position: relative;\r\n    min-height: 100%;\r\n    width: 100%;\r\n    margin: 0px auto;\r\n    -webkit-perspective: 1000;\r\n  }\r\n  #card {\r\n    -webkit-transition-property: rotation;\r\n    -webkit-transition-duration: 2s;\r\n    -webkit-transform-style: preserve-3d;\r\n  }\r\n  #local {\r\n    position: absolute;\r\n    width: 100%;\r\n    -webkit-transform: scale(-1, 1);\r\n    -webkit-backface-visibility: hidden;\r\n  }\r\n  #remote {\r\n    position: absolute;\r\n    width: 100%;\r\n    -webkit-transform: rotateY(180deg);\r\n    -webkit-backface-visibility: hidden;\r\n  }\r\n  #mini {\r\n    position: absolute;\r\n    height: 30%;\r\n    width: 30%;\r\n    bottom: 32px;\r\n    right: 4px;\r\n    -webkit-transform: scale(-1, 1);\r\n    opacity: 1.0;\r\n  }\r\n  #localVideo {\r\n    opacity: 0;\r\n    -webkit-transition-property: opacity;\r\n    -webkit-transition-duration: 2s;\r\n  }\r\n  #remoteVideo {\r\n    opacity: 0;\r\n    -webkit-transition-property: opacity;\r\n    -webkit-transition-duration: 2s;\r\n  }\r\n  #miniVideo {\r\n    opacity: 0;\r\n    -webkit-transition-property: opacity;\r\n    -webkit-transition-duration: 2s;\r\n  }\r\n  #footer {\r\n    spacing: 4px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 28px;\r\n    background-color: #3F3F3F;\r\n    color: rgb(255, 255, 255);\r\n    font-size:13px; font-weight: bold;\r\n    line-height: 28px;\r\n    text-align: center;\r\n  }\r\n  #hangup {\r\n   font-size:13px; font-weight:bold;\r\n   color:#FFFFFF;\r\n   width:128px;\r\n   height:24px;\r\n   background-color:#808080;\r\n   border-style:solid;\r\n   border-color:#FFFFFF;\r\n   margin:2px;\r\n  }\r\n  #logo {\r\n    display: block;\r\n    top:4;\r\n    right:4;\r\n    position:absolute;\r\n    float:right;\r\n    opacity: 0.5;\r\n  }\r\n\r\n</style>\r\n\r\n"],[0,"<script "]],"start1":20,"start2":20,"length1":16,"length2":2060}]],"length":18377,"saved":false}
{"ts":1369424446442,"patch":[[{"diffs":[[0," src=\"/j"],[1,"avascript"],[0,"s/adapte"]],"start1":35,"start2":35,"length1":16,"length2":25}]],"length":18386,"saved":false}
{"ts":1369425102001,"patch":[[{"diffs":[[0,"})();\r\n</script>"],[1,"\r\n<div id=\"container\" ondblclick=\"enterFullScreen()\"> \r\n  <div id=\"card\">\r\n    <div id=\"local\">\r\n      <video width=\"100%\" height=\"100%\" id=\"localVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n    </video></div>\r\n    <div id=\"remote\">\r\n      <video width=\"100%\" height=\"100%\" id=\"remoteVideo\" autoplay=\"autoplay\">\r\n      </video>\r\n      <div id=\"mini\">\r\n        <video width=\"100%\" height=\"100%\" id=\"miniVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n      </video></div>\r\n    </div>\r\n  </div>\r\n  <div id=\"footer\">\r\n  </div>\r\n</div>\r\n"]],"start1":18370,"start2":18370,"length1":16,"length2":540}]],"length":18910,"saved":false}
{"ts":1369425120588,"patch":[[{"diffs":[[0,"<div"],[-1,">\r\nHello world\r\n</div>"],[1," id=\"container\" ondblclick=\"enterFullScreen()\"> \r\n  <div id=\"card\">\r\n    <div id=\"local\">\r\n      <video width=\"100%\" height=\"100%\" id=\"localVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n    </video></div>\r\n    <div id=\"remote\">\r\n      <video width=\"100%\" height=\"100%\" id=\"remoteVideo\" autoplay=\"autoplay\">\r\n      </video>\r\n      <div id=\"mini\">\r\n        <video width=\"100%\" height=\"100%\" id=\"miniVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n      </video></div>\r\n    </div>\r\n  </div>\r\n  <div id=\"footer\">\r\n  </div>\r\n</div>\r\n"],[0,"\r\n<s"]],"start1":0,"start2":0,"length1":30,"length2":526},{"diffs":[[0,"t>\r\n"],[-1,"<div id=\"container\" ondblclick=\"enterFullScreen()\"> \r\n  <div id=\"card\">\r\n    <div id=\"local\">\r\n      <video width=\"100%\" height=\"100%\" id=\"localVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n    </video></div>\r\n    <div id=\"remote\">\r\n      <video width=\"100%\" height=\"100%\" id=\"remoteVideo\" autoplay=\"autoplay\">\r\n      </video>\r\n      <div id=\"mini\">\r\n        <video width=\"100%\" height=\"100%\" id=\"miniVideo\" autoplay=\"autoplay\" muted=\"true\">\r\n      </video></div>\r\n    </div>\r\n  </div>\r\n  <div id=\"footer\">\r\n  </div>\r\n</div>\r\n"]],"start1":18880,"start2":18880,"length1":526,"length2":4}]],"length":18884,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369431256019,"patch":[[{"diffs":[[0,"c;\r\n"],[-1,"  var socket;\r\n"],[0,"  va"]],"start1":2893,"start2":2893,"length1":23,"length2":8},{"diffs":[[0,"ket."],[-1,"send(\""],[1,"emit(\"setPeerChannel"],[0,"\", c"]],"start1":4030,"start2":4030,"length1":14,"length2":28},{"diffs":[[0,".on("],[-1,"'passWebRtcMessage', function (data)"],[1,"channelToken, function(msg)\r\n    {\r\n        if (msg.type === \"disconnect\")\r\n        {\r\n            onChannelClosed()\r\n        }\r\n        if (msg.type === \"connect\")\r\n        {\r\n            initiator = msg.membersCounts === 0;\r\n            onChannelOpened()\r\n        }\r\n        if (msg.type === \"message\")\r\n       "],[0," {\r\n"],[1,"   "],[0,"    "]],"start1":4083,"start2":4083,"length1":48,"length2":328},{"diffs":[[0,"Message("],[1,"msg."],[0,"data);\r\n"],[1,"        }\r\n"],[0,"    });\r"]],"start1":4425,"start2":4425,"length1":24,"length2":39},{"diffs":[[0,"ging here.\r\n"],[1,"    /*\r\n"],[0,"    path = '"]],"start1":9167,"start2":9167,"length1":24,"length2":32},{"diffs":[[0,"sgString);\r\n"],[1,"    */\r\n    socket.emit(sessionId, {type:message, message: msgString});\r\n"],[0,"  }\r\n\r\n  fun"]],"start1":9324,"start2":9324,"length1":24,"length2":97},{"diffs":[[0,"  }\r\n})("],[1,"document.location.hash"],[0,");\r\n</sc"]],"start1":19236,"start2":19236,"length1":16,"length2":38}]],"length":19281,"saved":false}
{"ts":1369431309093,"patch":[[{"diffs":[[0,"ringify("],[-1,"message"],[1,"{type:\"message\", data:message}"],[0,");\r\n    "]],"start1":9018,"start2":9018,"length1":23,"length2":46}]],"length":19304,"saved":false}
{"ts":1369431440583,"patch":[[{"diffs":[[0,"ersCount"],[-1,"s"],[0," === 0;\r"]],"start1":4296,"start2":4296,"length1":17,"length2":16}]],"length":19303,"saved":false}
{"ts":1369431727544,"patch":[[{"diffs":[[0,"unt === "],[-1,"0"],[1,"1"],[0,";\r\n     "]],"start1":4301,"start2":4301,"length1":17,"length2":17}]],"length":19303,"saved":false}
{"ts":1369431940362,"patch":[[{"diffs":[[0,"urn_url) {\r\n"],[1,"  turnReady = true;\r\n  /*\r\n"],[0,"    var turn"]],"start1":4495,"start2":4495,"length1":24,"length2":51},{"diffs":[[0,"send();\r\n    }\r\n"],[1,"    */\r\n"],[0,"  }\r\n\r\n  functio"]],"start1":5004,"start2":5004,"length1":32,"length2":40}]],"length":19338,"saved":false}
{"ts":1369432347507,"patch":[[{"diffs":[[0,"iator = "],[-1,"1"],[1,"0"],[0,";\r\n  var"]],"start1":2907,"start2":2907,"length1":17,"length2":17}]],"length":19338,"saved":false}
{"ts":1369432362558,"patch":[[{"diffs":[[0,"or ="],[-1," msg.membersCount ==="],[0," 1;\r"]],"start1":4283,"start2":4283,"length1":29,"length2":8}]],"length":19317,"saved":false}
{"ts":1369433126997,"patch":[[{"diffs":[[1,"<% layout('layout') -%>\r\n"],[0,"<div id=\"contain"]],"start1":0,"start2":0,"length1":16,"length2":41}]],"length":19342,"saved":false}
{"ts":1369433153350,"patch":[[{"diffs":[[0,"ayout') "],[-1,"-"],[0,"%>\r\n<div"]],"start1":12,"start2":12,"length1":17,"length2":16}]],"length":19341,"saved":false}
{"ts":1369433167426,"patch":[[{"diffs":[[-1,"<% layout('layout') %>"],[0,"\r\n<d"]],"start1":0,"start2":0,"length1":26,"length2":4}]],"length":19319,"saved":false}
{"ts":1369433189202,"patch":[[{"diffs":[[0,"h);\r\n</script>\r\n"],[1,"\r\n"]],"start1":19303,"start2":19303,"length1":16,"length2":18}]],"length":19321,"saved":false}
{"ts":1369433273376,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Pivotal Search</title>\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"\">\r\n\r\n    <!-- HTML5 shim, for IE6-8 support of HTML elements -->\r\n    <!--[if lt IE 9]>\r\n      <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n\r\n    <!-- styles -->\r\n    <link href=\"stylesheets/style.css\" rel=\"stylesheet\">\r\n\r\n  </head>\r\n  <body>\r\n    "],[0,"\r\n<div i"]],"start1":0,"start2":0,"length1":8,"length2":489},{"diffs":[[0,"ash);\r\n</script>\r\n\r\n"],[1,"  </body>\r\n</html>"]],"start1":19782,"start2":19782,"length1":20,"length2":38}]],"length":19820,"saved":false}
{"ts":1369433299875,"patch":[[{"diffs":[[0,"tle>"],[-1,"Pivotal Search"],[0,"</ti"]],"start1":80,"start2":80,"length1":22,"length2":8}]],"length":19806,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369435287890,"patch":[[{"diffs":[[0,"   i"],[-1,"nitiator = 1;\r\n"],[1,"f (msg.membersCount===1)\r\n            {\r\n                initiator = 1;\r\n            }\r\n            else\r\n            {\r\n    "],[0,"    "]],"start1":4742,"start2":4742,"length1":23,"length2":133},{"diffs":[[0,"elOpened()\r\n"],[1,"            }\r\n"],[0,"        }\r\n "]],"start1":4890,"start2":4890,"length1":24,"length2":39},{"diffs":[[0,"eStart() {\r\n"],[1,"    console.log(\"maybe started called\");\r\n"],[0,"    if (!sta"]],"start1":7778,"start2":7778,"length1":24,"length2":66}]],"length":19973,"saved":false}
{"ts":1369435420272,"patch":[[{"diffs":[[0,"t\")\r\n        {\r\n"],[1,"            initiator = 1;\r\n"],[0,"            onCh"]],"start1":4627,"start2":4627,"length1":32,"length2":60}]],"length":20001,"saved":false}
{"ts":1369435627572,"patch":[[{"diffs":[[0,"= true;\r\n   "],[-1," if (initiator)"],[0," maybeStart("]],"start1":11150,"start2":11150,"length1":39,"length2":24}]],"length":19986,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369436159364,"patch":[[{"diffs":[[0,"on.\r\n   "],[-1," if (initiator)"],[0," maybeSt"]],"start1":11783,"start2":11783,"length1":31,"length2":16}]],"length":19971,"saved":false}
{"ts":1369439942710,"patch":[[{"diffs":[[0,", {type:"],[1,"\""],[0,"message"],[1,"\""],[0,", messag"]],"start1":10069,"start2":10069,"length1":23,"length2":25}]],"length":19973,"saved":false}
{"ts":1369439987483,"patch":[[{"diffs":[[0,", {type:"],[-1,"\""],[0,"message"],[-1,"\""],[0,", messag"]],"start1":10069,"start2":10069,"length1":25,"length2":23},{"diffs":[[0,"ection.\r\n   "],[1," if (initiator)"],[0," maybeStart("]],"start1":11779,"start2":11779,"length1":24,"length2":39}]],"length":19986,"saved":false}
{"ts":1369440012414,"patch":[[{"diffs":[[0,", {type:"],[1,"\""],[0,"message"],[1,"\""],[0,", messag"]],"start1":10069,"start2":10069,"length1":23,"length2":25}]],"length":19988,"saved":false}
{"ts":1369440095703,"patch":[[{"diffs":[[0,"Id, "],[-1,"{type:\"message\", message: msgString}"],[0,");\r\n"]],"start1":10067,"start2":10067,"length1":44,"length2":8}]],"length":19952,"saved":false}
{"ts":1369440097148,"patch":[[{"diffs":[[0,"sionId, "],[1,"msgString"],[0,");\r\n  }\r"]],"start1":10063,"start2":10063,"length1":16,"length2":25}]],"length":19961,"saved":false}
{"ts":1369440600816,"patch":[[{"diffs":[[0,"sg)\r\n    {\r\n"],[1,"        console.log(msg);\r\n"],[0,"        if ("]],"start1":4580,"start2":4580,"length1":24,"length2":51},{"diffs":[[0,"e\")\r\n        {\r\n"],[1,"            \r\n"],[0,"            onCh"]],"start1":5015,"start2":5015,"length1":32,"length2":46}]],"length":20002,"saved":false}
{"ts":1369440610388,"patch":[[{"diffs":[[0,"ole.log("],[1,"\"server sent:\" + "],[0,"msg);\r\n "]],"start1":4604,"start2":4604,"length1":16,"length2":33}]],"length":20019,"saved":false}
{"ts":1369440765714,"patch":[[{"diffs":[[0," {\r\n"],[-1,"    var msgString = JSON.stringify({type:\"message\", data:message});\r\n"],[0,"    "]],"start1":9722,"start2":9722,"length1":77,"length2":8},{"diffs":[[0,"sionId, "],[-1,"msgString"],[1,"{type:\"message\", data:JSON.stringify(message)}"],[0,");\r\n  }\r"]],"start1":10052,"start2":10052,"length1":25,"length2":62}]],"length":19987,"saved":false}
{"ts":1369440856964,"patch":[[{"diffs":[[0,">S: ' + "],[-1,"msgString"],[1,"JSON.stringify(message)"],[0,");\r\n    "]],"start1":9745,"start2":9745,"length1":25,"length2":39}]],"length":20001,"saved":false}
{"ts":1369440971544,"patch":[[{"diffs":[[0,"ent:\" + "],[1,"JSON.stringify("],[0,"msg)"],[1,")"],[0,";\r\n     "]],"start1":4621,"start2":4621,"length1":20,"length2":36}]],"length":20017,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369445033320,"patch":[[{"diffs":[[0,"ipt\""],[-1,">\r\nvar socket = io.connect('/');\r\n\r\n(function(sessionId)\r\n{\r\n  var localVideo;\r\n  var miniVideo;\r\n  var remoteVideo;\r\n  var localStream;\r\n  var remoteStream;\r\n  var channel;\r\n  var channelReady = false;\r\n  var turnReady = false;\r\n  var pc;\r\n  var initiator = 0;\r\n  var started = false;\r\n  var pc_config = {\"iceServers\": [{\"url\": \"stun:stun.l.google.com:19302\"}]};\r\n  var pc_constraints = {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]};\r\n  // Set up audio and video regardless of what devices are present.\r\n  var sdpConstraints = {'mandatory': {\r\n                          'OfferToReceiveAudio':true, \r\n                          'OfferToReceiveVideo':true }};\r\n  var isVideoMuted = false;\r\n  var isAudioMuted = false;\r\n  var stereo = false;\r\n\r\n  function initialize() {\r\n    card = document.getElementById(\"card\");\r\n    localVideo = document.getElementById(\"localVideo\");\r\n    miniVideo = document.getElementById(\"miniVideo\");\r\n    remoteVideo = document.getElementById(\"remoteVideo\");\r\n    resetStatus();\r\n    // NOTE: AppRTCClient.java searches & parses this line; update there when\r\n    // changing here.\r\n    openChannel(sessionId);\r\n    requestTurn('https://computeengineondemand.appspot.com/turn?username=10815863&key=4080218913');\r\n    stereo = false;\r\n    doGetUserMedia();\r\n  }\r\n\r\n  function openChannel(channelToken) {\r\n    console.log(\"Opening channel.\");\r\n    socket.emit(\"setPeerChannel\", channelToken);\r\n    socket.on(channelToken, function(msg)\r\n    {\r\n        console.log(\"server sent:\" + JSON.stringify(msg));\r\n        if (msg.type === \"disconnect\")\r\n        {\r\n            initiator = 1;\r\n            onChannelClosed()\r\n        }\r\n        if (msg.type === \"connect\")\r\n        {\r\n            if (msg.membersCount===1)\r\n            {\r\n                initiator = 1;\r\n            }\r\n            else\r\n            {\r\n                onChannelOpened()\r\n            }\r\n        }\r\n        if (msg.type === \"message\")\r\n        {\r\n            \r\n            onChannelMessage(msg.data);\r\n        }\r\n    });\r\n  }\r\n\r\n  function requestTurn(turn_url) {\r\n  turnReady = true;\r\n  /*\r\n    var turnExists = false;\r\n    for (var i in pc_config.iceServers) {\r\n      if (pc_config.iceServers[i].url.substr(0, 5) == 'turn:') {\r\n        turnExists = true;\r\n        turnReady = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!turnExists) {\r\n      // No turn server. Get one from computeengineondemand.appspot.com:\r\n      xmlhttp = new XMLHttpRequest();\r\n      xmlhttp.onreadystatechange = onTurnResult;\r\n      xmlhttp.open(\"GET\", turn_url, true);\r\n      xmlhttp.send();\r\n    }\r\n    */\r\n  }\r\n\r\n  function onTurnResult() {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      var turnServer = JSON.parse(xmlhttp.responseText);\r\n      pc_config.iceServers.push({\r\n        \"url\": \"turn:\" + turnServer.username + \"@\" + turnServer.turn,\r\n        \"credential\": turnServer.password\r\n      });\r\n      turnReady = true;\r\n    }\r\n  }\r\n\r\n  function resetStatus() {\r\n    if (!initiator) {\r\n      setStatus(\"Waiting for someone to join: <a href=\\\"https://apprtc.appspot.com/?r=91533542\\\">https://apprtc.appspot.com/?r=91533542</a>\");\r\n    } else {\r\n      setStatus(\"Initializing...\");\r\n    }\r\n  }\r\n\r\n  function doGetUserMedia() {\r\n    // Call into getUserMedia via the polyfill (adapter.js).\r\n    var constraints = {\"audio\": true, \"video\": {\"mandatory\": {}, \"optional\": []}}; \r\n    try {\r\n      getUserMedia(constraints, onUserMediaSuccess,\r\n                   onUserMediaError);\r\n      console.log(\"Requested access to local media with mediaConstraints:\\n\" +\r\n                  \"  \\\"\" + JSON.stringify(constraints) + \"\\\"\");\r\n    } catch (e) {\r\n      alert(\"getUserMedia() failed. Is this a WebRTC capable browser?\");\r\n      console.log(\"getUserMedia failed with exception: \" + e.message);\r\n    }\r\n  }\r\n\r\n  function createPeerConnection() {    \r\n    // Force the use of a number IP STUN server for Firefox.\r\n    if (webrtcDetectedBrowser == \"firefox\") {\r\n      pc_config = {\"iceServers\":[{\"url\":\"stun:23.21.150.121\"}]};\r\n    }\r\n    try {\r\n      // Create an RTCPeerConnection via the polyfill (adapter.js).\r\n      pc = new RTCPeerConnection(pc_config, pc_constraints);\r\n      pc.onicecandidate = onIceCandidate;\r\n      console.log(\"Created RTCPeerConnnection with:\\n\" + \r\n                  \"  config: \\\"\" + JSON.stringify(pc_config) + \"\\\";\\n\" + \r\n                  \"  constraints: \\\"\" + JSON.stringify(pc_constraints) + \"\\\".\");\r\n    } catch (e) {\r\n      console.log(\"Failed to create PeerConnection, exception: \" + e.message);\r\n      alert(\"Cannot create RTCPeerConnection object; WebRTC is not supported by this browser.\");\r\n        return;\r\n    }\r\n    pc.onaddstream = onRemoteStreamAdded;\r\n    pc.onremovestream = onRemoteStreamRemoved;\r\n  }\r\n\r\n  function maybeStart() {\r\n    console.log(\"maybe started called\");\r\n    if (!started && localStream && channelReady && turnReady) {\r\n      setStatus(\"Connecting...\");\r\n      console.log(\"Creating PeerConnection.\");\r\n      createPeerConnection();\r\n      console.log(\"Adding local stream.\");\r\n      pc.addStream(localStream);\r\n      started = true;\r\n      // Caller initiates offer to peer.\r\n      if (initiator)\r\n        doCall();\r\n    }\r\n  }\r\n\r\n  function setStatus(state) {\r\n    footer.innerHTML = state;\r\n  }\r\n\r\n  function doCall() {\r\n    var constraints = {\"optional\": [], \"mandatory\": {\"MozDontOfferDataChannel\": true}};\r\n    // temporary measure to remove Moz* constraints in Chrome\r\n    if (webrtcDetectedBrowser === \"chrome\") {\r\n      for (prop in constraints.mandatory) {\r\n        if (prop.indexOf(\"Moz\") != -1) {\r\n          delete constraints.mandatory[prop];\r\n        }\r\n       }\r\n     }   \r\n    constraints = mergeConstraints(constraints, sdpConstraints);\r\n    console.log(\"Sending offer to peer, with constraints: \\n\" +\r\n                \"  \\\"\" + JSON.stringify(constraints) + \"\\\".\")\r\n    pc.createOffer(setLocalAndSendMessage, null, constraints);\r\n  }\r\n\r\n  function doAnswer() {\r\n    console.log(\"Sending answer to peer.\");\r\n    pc.createAnswer(setLocalAndSendMessage, null, sdpConstraints);\r\n  }\r\n\r\n  function mergeConstraints(cons1, cons2) {\r\n    var merged = cons1;\r\n    for (var name in cons2.mandatory) {\r\n      merged.mandatory[name] = cons2.mandatory[name];\r\n    }\r\n    merged.optional.concat(cons2.optional);\r\n    return merged;\r\n  }\r\n\r\n  function setLocalAndSendMessage(sessionDescription) {\r\n    // Set Opus as the preferred codec in SDP if Opus is present.\r\n    sessionDescription.sdp = preferOpus(sessionDescription.sdp);\r\n    pc.setLocalDescription(sessionDescription);\r\n    sendMessage(sessionDescription);\r\n  }\r\n\r\n  function sendMessage(message) {\r\n    console.log('C->S: ' + JSON.stringify(message));\r\n    // NOTE: AppRTCClient.java searches & parses this line; update there when\r\n    // changing here.\r\n    /*\r\n    path = '/message?r=91533542' + '&u=10815863';\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('POST', path, true);\r\n    xhr.send(msgString);\r\n    */\r\n    socket.emit(sessionId, {type:\"message\", data:JSON.stringify(message)});\r\n  }\r\n\r\n  function processSignalingMessage(message) {\r\n    var msg = JSON.parse(message);\r\n    if (msg.type === 'offer') {\r\n      // Callee creates PeerConnection\r\n      if (!initiator && !started)\r\n        maybeStart();\r\n      // Set Opus in Stereo, if stereo enabled.\r\n      if (stereo)\r\n        msg.sdp = addStereo(msg.sdp);\r\n      pc.setRemoteDescripti"],[1," src=\"/javascripts/webrtc.js\"></script>\r\n<script type=\"text/javascript\">\r\nvar socket = io.c"],[0,"on"],[-1,"("],[0,"ne"],[-1,"w RTCSessionDescription(msg));\r\n      doAnswer();\r\n    } else if (msg.type === 'answer' && started) {\r\n      // Set Opus in Stereo, if stereo enabled.\r\n      if (stereo)\r\n        msg.sdp = addStereo(msg.sdp);\r\n      pc.setRemoteDescription(new RTCSessionDescription(msg));\r\n    } else if (msg.type === 'candidate' && started) {\r\n      var candidate = new RTCIceCandidate({sdpMLineIndex:msg.label,\r\n                                           candidate:msg.candidate});\r\n      pc.addIceCandidate(candidate);\r\n    } else if (msg.type === 'bye' && started) {\r\n      onRemoteHangup();\r\n    }\r\n  }\r\n\r\n  function onChannelOpened() {\r\n    console.log('Channel opened.');\r\n    channelReady = true;\r\n    maybeStart();\r\n  }\r\n  function onChannelMessage(message) {\r\n    console.log('S->C: ' + message.data);\r\n    processSignalingMessage(message.data);\r\n  }\r\n  function onChannelError() {\r\n    console.log('Channel error.');\r\n  }\r\n  function onChannelClosed() {\r\n    console.log('Channel closed.');\r\n  }\r\n\r\n  function onUserMediaSuccess(stream) {\r\n    console.log(\"User has granted access to local media.\");\r\n    // Call the polyfill wrapper to attach the media stream to this element.\r\n    attachMediaStream(localVideo, stream);\r\n    localVideo.style.opacity = 1;\r\n    localStream = stream;\r\n    // Caller creates PeerConnection.\r\n    if (initiator) maybeStart();\r\n  }\r\n\r\n  function onUserMediaError(error) {\r\n    console.log(\"Failed to get access to local media. Error code was \" + error.code);\r\n    alert(\"Failed to get access to local media. Error code was \" + error.code + \".\");\r\n  }\r\n\r\n  function onIceCandidate(event) {\r\n    if (event.candidate) {\r\n      sendMessage({type: 'candidate',\r\n                   label: event.candidate.sdpMLineIndex,\r\n                   id: event.candidate.sdpMid,\r\n                   candidate: event.candidate.candidate});\r\n    } else {\r\n      console.log(\"End of candidates.\");\r\n    }\r\n  }\r\n\r\n  function onRemoteStreamAdded(event) {\r\n    console.log(\"Remote stream added.\"); \r\n    reattachMediaStream(miniVideo, localVideo);\r\n    attachMediaStream(remoteVideo, event.stream);\r\n    remoteStream = event.stream;\r\n    waitForRemoteVideo();  \r\n  }\r\n  function onRemoteStreamRemoved(event) {\r\n    console.log(\"Remote stream removed.\");\r\n  }\r\n\r\n  function onHangup() {\r\n    console.log(\"Hanging up.\");\r\n    transitionToDone();\r\n    stop();\r\n    // will trigger BYE from server\r\n    socket.close();\r\n  }\r\n   \r\n  function onRemoteHangup() {\r\n    console.log('Session terminated.');\r\n    transitionToWaiting();\r\n    stop();\r\n    initiator = 0;\r\n  }\r\n\r\n  function stop() {\r\n    started = false;\r\n    isAudioMuted = false;\r\n    isVideoMuted = false;\r\n    pc.close();\r\n    pc = null;\r\n  }\r\n\r\n  function waitForRemoteVideo() {\r\n    // Call the getVideoTracks method via adapter.js.\r\n    videoTracks = remoteStream.getVideoTracks();\r\n    if (videoTracks.length === 0 || remoteVideo.currentTime > 0) {\r\n      transitionToActive();\r\n    } else {\r\n      setTimeout(waitForRemoteVideo, 100);\r\n    }\r\n  }\r\n  function transitionToActive() {\r\n    remoteVideo.style.opacity = 1;\r\n    card.style.webkitTransform = \"rotateY(180deg)\";\r\n    setTimeout(function() { localVideo.src = \"\"; }, 500);\r\n    setTimeout(function() { miniVideo.style.opacity = 1; }, 1000);\r\n    setStatus(\"<input type=\\\"button\\\" id=\\\"hangup\\\" value=\\\"Hang up\\\" onclick=\\\"onHangup()\\\" />\");\r\n  }\r\n  function transitionToWaiting() {\r\n    card.style.webkitTransform = \"rotateY(0deg)\";\r\n    setTimeout(function() {\r\n                 localVideo.src = miniVideo.src;\r\n                 miniVideo.src = \"\";\r\n                 remoteVideo.src = \"\" }, 500);\r\n    miniVideo.style.opacity = 0;\r\n    remoteVideo.style.opacity = 0;\r\n    resetStatus();\r\n  }\r\n  function transitionToDone() {\r\n    localVideo.style.opacity = 0;\r\n    remoteVideo.style.opacity = 0;\r\n    miniVideo.style.opacity = 0;\r\n    setStatus(\"You have left the call. <a href=\\\"https://apprtc.appspot.com/?r=91533542\\\">Click here</a> to rejoin.\");\r\n  }\r\n  function enterFullScreen() {\r\n    container.webkitRequestFullScreen();\r\n  }\r\n\r\n  function toggleVideoMute() {\r\n    // Call the getVideoTracks method via adapter.js.\r\n    videoTracks = localStream.getVideoTracks();\r\n\r\n    if (videoTracks.length === 0) {\r\n      console.log(\"No local video available.\");\r\n      return;\r\n    }\r\n\r\n    if (isVideoMuted) {\r\n      for (i = 0; i < videoTracks.length; i++) {\r\n        videoTracks[i].enabled = true;\r\n      }\r\n      console.log(\"Video unmuted.\");\r\n    } else {\r\n      for (i = 0; i < videoTracks.length; i++) {\r\n        videoTracks[i].enabled = false;\r\n      }\r\n      console.log(\"Video muted.\");\r\n    }\r\n\r\n    isVideoMuted = !isVideoMuted;    \r\n  }\r\n\r\n  function toggleAudioMute() {\r\n    // Call the getAudioTracks method via adapter.js.\r\n    audioTracks = localStream.getAudioTracks();\r\n\r\n    if (audioTracks.length === 0) {\r\n      console.log(\"No local audio available.\");\r\n      return;\r\n    }\r\n\r\n    if (isAudioMuted) {\r\n      for (i = 0; i < audioTracks.length; i++) {\r\n        audioTracks[i].enabled = true;\r\n      }\r\n      console.log(\"Audio unmuted.\");\r\n    } else {\r\n      for (i = 0; i < audioTracks.length; i++){\r\n        audioTracks[i].enabled = false;\r\n      }\r\n      console.log(\"Audio muted.\");\r\n    }\r\n\r\n    isAudioMuted = !isAudioMuted;  \r\n  }\r\n\r\n  setTimeout(initialize, 1);\r\n\r\n  // Send BYE on refreshing(or leaving) a demo page\r\n  // to ensure the room is cleaned for next session.\r\n  window.onbeforeunload = function() {\r\n    sendMessage({type: 'bye'});\r\n  }\r\n\r\n  // Ctrl-D: toggle audio mute; Ctrl-E: toggle video mute.\r\n  // On Mac, Command key is instead of Ctrl.\r\n  // Return false to screen out original Chrome shortcuts.\r\n  document.onkeydown = function() {\r\n    if (navigator.appVersion.indexOf(\"Mac\") != -1) {\r\n      if (event.metaKey && event.keyCode === 68) {\r\n        toggleAudioMute();\r\n        return false;\r\n      }\r\n      if (event.metaKey && event.keyCode === 69) {\r\n        toggleVideoMute();\r\n        return false;\r\n      }\r\n    } else {\r\n      if (event.ctrlKey && event.keyCode === 68) {\r\n        toggleAudioMute();\r\n        return false;\r\n      }\r\n      if (event.ctrlKey && event.keyCode === 69) {\r\n        toggleVideoMute();\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Set Opus as the default audio codec if it's present.\r\n  function preferOpus(sdp) {\r\n    var sdpLines = sdp.split('\\r\\n');\r\n\r\n    // Search for m line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n        if (sdpLines[i].search('m=audio') !== -1) {\r\n          var mLineIndex = i;\r\n          break;\r\n        } \r\n    }\r\n    if (mLineIndex === null)\r\n      return sdp;\r\n\r\n    // If Opus is available, set it as the default in m line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('opus/48000') !== -1) {        \r\n        var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n        if (opusPayload)\r\n          sdpLines[mLineIndex] = setDefaultCodec(sdpLines[mLineIndex], opusPayload);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Remove CN in m line and sdp.\r\n    sdpLines = removeCN(sdpLines, mLineIndex);\r\n\r\n    sdp = sdpLines.join('\\r\\n');\r\n    return sdp;\r\n  }\r\n\r\n  // Set Opus in stereo if stereo is enabled.\r\n  function addStereo(sdp) {\r\n    var sdpLines = sdp.split('\\r\\n');\r\n\r\n    // Find opus payload.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('opus/48000') !== -1) {\r\n        var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Find the payload in fmtp line.\r\n    for (var i = 0; i < sdpLines.length; i++) {\r\n      if (sdpLines[i].search('a=fmtp') !== -1) {\r\n        var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/ );\r\n        if (payload === opusPayload) {\r\n          var fmtpLineIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // No fmtp line found.\r\n    if (fmtpLineIndex === null)\r\n      return sdp;\r\n\r\n    // append stereo=1 to fmtp line.\r\n    sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat(' stereo=1');\r\n\r\n    sdp = sdpLines.join('\\r\\n');\r\n    return sdp;\r\n  }\r\n\r\n  function extractSdp(sdpLine, pattern) {\r\n    var result = sdpLine.match(pattern);\r\n    return (result && result.length == 2)? result[1]: null;\r\n  }\r\n\r\n  // Set the selected codec to the first in m line.\r\n  function setDefaultCodec(mLine, payload) {\r\n    var elements = mLine.split(' ');\r\n    var newLine = new Array();\r\n    var index = 0;\r\n    for (var i = 0; i < elements.length; i++) {\r\n      if (index === 3) // Format of media starts from the fourth.\r\n        newLine[index++] = payload; // Put target payload to the first.\r\n      if (elements[i] !== payload)\r\n        newLine[index++] = elements[i];\r\n    }\r\n    return newLine.join(' ');\r\n  }\r\n\r\n  // Strip CN from sdp before CN constraints is ready.\r\n  function removeCN(sdpLines, mLineIndex) {\r\n    var mLineElements = sdpLines[mLineIndex].split(' ');\r\n    // Scan from end for the convenience of removing an item.\r\n    for (var i = sdpLines.length-1; i >= 0; i--) {\r\n      var payload = extractSdp(sdpLines[i], /a=rtpmap:(\\d+) CN\\/\\d+/i);\r\n      if (payload) {\r\n        var cnPos = mLineElements.indexOf(payload);\r\n        if (cnPos !== -1) {\r\n          // Remove CN payload from m line.\r\n          mLineElements.splice(cnPos, 1);\r\n        }\r\n        // Remove CN line in sdp\r\n        sdpLines.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    sdpLines[mLineIndex] = mLineElements.join(' ');\r\n    return sdpLines;\r\n  }\r\n})(document.location.hash"],[1,"ct('/');\r\nwebRtcConnect(document.location.hash, socket"],[0,");\r\n"]],"start1":3121,"start2":3121,"length1":16865,"length2":157}]],"length":3309,"saved":false}
